services:
  avito-shop-service:
    build: .
    container_name: avito-shop-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - AV_DB_HOST=db
      - AV_DB_PORT=5432
      - AV_DB_USER=postgres
      - AV_DB_PASSWORD=password
      - AV_DB_NAME=av-merch-shop
      - AV_SECRET=totally-secret-key
      - AV_REDIS_ADDR=redis:6379
      - AV_REDIS_PASSWORD=password
      - AV_REDIS_DB=0
      - AV_SERVER_PORT=:8080
      - AV_SERVER_READ_TIMEOUT=1
      - AV_SERVER_WRITE_TIMEOUT=2
      - AV_REQUEST_TIMEOUT=50
      - AV_SERVER_MODE=production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrations:
        condition: service_completed_successfully
    networks:
      - internal

  migrations:
    build:
      context: .
      dockerfile: deploy/Dockerfile.migrations
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=postgres://postgres:password@db:5432/av-merch-shop?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    command: redis-server --requirepass password
    restart: always
    networks:
      - internal

  db:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=av-merch-shop
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d av-merch-shop'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

networks:
  internal:

volumes:
  postgres-data:
  redis-data:
